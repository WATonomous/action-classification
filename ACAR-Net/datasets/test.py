from PIL import Image
import os
import pickle
import json
import numpy as np
import io
from iopath.common.file_io import g_pathmgr

import torch
import torch.nn.functional as F
import torchvision

class Test():
    def __init__(self):
        self.list = ['a', 'b', 'c', 'd', 'e']

    def __getitem__(self, index):
        print(index)
        if index == 2:
            return None 
        else:
            return self.list[index]


if __name__ == '__main__':

    frame = torch.rand(8, 256, 16, 22).cuda()
    rois = torch.tensor([[ 0.0000,  7.3269,  6.8988, 14.3753, 12.9569],
        [ 0.0000,  6.5182,  6.8569,  6.9128,  8.1395],
        [ 0.0000,  3.5229,  5.2355,  4.0149,  16.0000],
        [ 0.0000,  2.7213,  5.3331,  22.0000,  6.5916],
        [ 1.0000, 10.9463,  7.4000, 12.6704,  8.6291],
        [ 1.0000,  9.3661,  6.1915,  9.8198,  7.0327],
        [ 1.0000, 13.6700,  5.9790, 14.1658,  6.9606],
        [ 2.0000,  8.3461,  6.5160,  9.3706,  8.8419],
        [ 2.0000,  9.0703,  6.6886,  9.9485,  8.5091],
        [ 2.0000, 10.7261,  6.9559, 11.7486,  7.7935],
        [ 2.0000, 14.1687,  6.8006, 14.8422,  8.0566],
        [ 2.0000, 22.0000, 16.0000, 22.0000, 16.0000],
        [ 3.0000, 22.0000, 16.0000, 22.0000, 16.0000],
        [ 4.0000, 12.1051,  7.1499, 12.8324,  8.5468],
        [ 5.0000,  5.6907,  5.3395,  6.7005,  7.8135],
        [ 5.0000,  2.7339,  6.1341,  6.1092, 12.4053],
        [ 5.0000,  9.1919,  6.8408,  9.8929,  8.4920],
        [ 5.0000, 12.9978,  7.3804, 16.3149,  9.6360],
        [ 5.0000,  3.9735,  6.0300,  4.8601,  7.6050],
        [ 5.0000,  2.1615,  5.6851,  3.6312, 10.6618],
        [ 5.0000, 12.2133,  7.1135, 13.5618,  8.5104],
        [ 5.0000,  0.1182,  6.0538,  1.6080, 11.8976],
        [ 5.0000, 22.0000, 16.0000, 22.0000, 16.0000],
        [ 5.0000, 22.0000, 16.0000, 22.0000, 16.0000],
        [ 5.0000, 22.0000, 16.0000, 22.0000, 16.0000],
        [ 6.0000,  9.9951,  7.1516, 12.8878,  9.4289],
        [ 6.0000, 10.3771,  6.6250, 12.3753,  9.3278],
        [ 6.0000,  6.1343,  6.8915,  6.5955,  7.9347],
        [ 6.0000,  6.6367,  6.9053,  6.9880,  7.9972],
        [ 6.0000, 14.0220,  6.2102, 14.2677,  6.8172],
        [ 6.0000, 14.3072,  6.1399, 14.6371,  6.8524],
        [ 6.0000,  9.6640,  6.9166, 10.4648,  7.8519],
        [ 6.0000, 22.0000, 16.0000, 22.0000, 16.0000],
        [ 6.0000, 22.0000, 16.0000, 22.0000, 16.0000],
        [ 7.0000, 12.8108,  6.9229, 13.7691,  9.5209],
        [ 7.0000, 13.2931,  7.0657, 14.3202,  9.3225],
        [ 7.0000, 14.9422,  6.8322, 15.6920,  8.8320],
        [ 7.0000, 15.3124,  7.1861, 15.8408,  8.2061]], device='cuda:0')

    rois[:, 1] = rois[:, 1] / 22
    rois[:, 2] = rois[:, 2] / 16
    rois[:, 3] = rois[:, 3] / 22
    rois[:, 4] = rois[:, 4] / 16

    rois = rois.detach()

    print(torchvision.ops.roi_align(frame, rois, (7, 7)))
    
    
