list_videos: True # lists the available videos to build annotations on
video_name: '2014-11-21-16-07-03_stereo_centre_01' # name of the video to build annotations on

Detector:
  # path to the detection annotations, leave empty if not wanted
  # detections_path: '/road/flow_color_model_fpn_x101_64x4d_finetune_val1_detections_inactive_merged_gt_format_0.1_new.json'
  detections_path: '/road/detections/eval/flow_color_model_fpn_x101_64x4d_finetune_val2_detections_inactive_merged_val2_gt_format_0.1.json'

Tracker:
  # path to annotations with tracks in them, leave empty if not wanted
  # tracks_path: '/road/flow_color_model_fpn_x101_64x4d_finetune_val1_detections_inactive_merged_gt_format_0.1_new_ocsort.json'
  tracks_path: '/road/detections/eval/flow_color_model_fpn_x101_64x4d_finetune_val2_detections_inactive_merged_val2_gt_format_0.1_ocsort.json'


  # NOTE: THESE PARAMS NEED TO BE SET YOURSELF, IF THE TRACKER CONFIG CHANGES, THEN CHECK THAT THESE PARAMS 
  # ARE ACCURATE BEFORE BUILDING THE VIDEO
  det_thresh: 0.5 # threshold for first round matching, detections for second matching are self.det_thresh > score > 0.1
  max_age: 30 # max number of frames in which an object can be gone until that track is considered dead
  min_hits: 3 # minimum number of times a detection must be hit until a track is formed (~vague, should look into)
  iou_threshold: 0.3 # IOU between detection candidates and tracked detection for second round matching

Action_Classifier:
  # path to annotations with actions in them
  # actions_path: '/road/predict_epoch_6.csv'
  actions_path: # '/road/flow_color_model_fpn_x101_64x4d_finetune_val1_detections_inactive_merged_gt_format_0.1_new_ocsort_acar.json'

  action_thresh: 0.05 # This is the threshold with which an action is drawn onto the frame

Video_Builder:
  video_path: '/road/rgb-images' # path to all the video rgb images
  save_path: '/project/Video-Builder/output' # where the debug video should be loaded to

Video_Formatting:
  # Misc Cv2 params for bbox layout
  bbox_thickness: 2 # pixels thick 

  # Title Location: based on the following xy plane
  # o----------------------> X
  # |     Title(x1 + title_location[0], y1 + title_location[1]) 
  # |     o----------o
  # |     | (x1, y1) |
  # |     |          |
  # |     o----------o (x2, y2)
  # |
  # v    
  # Y

  title_location: [0, -10] # pixels from x1, y1

  # Text params
  font_thickness: 1
  font_colour: !!python/tuple [0, 255, 0]
  font_anno_scale: 0.5
  font_header_scale: 1
  font_text_scale: 0.7
  